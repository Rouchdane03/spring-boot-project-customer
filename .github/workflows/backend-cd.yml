name: CD - Deploy backend

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - '**'
jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.1
        env:
          POSTGRES_USER: amigoscode
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5332:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
       working-directory: .
    steps:
      - uses: actions/checkout@v4
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":" :github: https://github.com/Rouchdane03/spring-boot-project-customer/commit/${{github.sha}} ${{github.event.head_commit.message}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Setup postgres news to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Le conteneur :container: postgres est configurÃ© dans notre runner(ubuntu-latest) pour repondre aux besoins du job du workflow"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Build package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send maven command news to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"le projet build, maven :maven: a compile le code , a run les TUs et TIs et a build puis push limage docker de notre code sur dockerhub a laide de jib qui se sert du jar :smile: "}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update Dockerrun.aws.json with the newest application image tag which is build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(rouchdane/spring-boot-example:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json
      - name: AWS Elastic Beanstalk Deploy the Updated Dockerrun.aws.json file
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_EB_ENVIRONMENT_NAME }}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          version_description: ${{github.SHA}}
          region: ${{ secrets.AWS_EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 140
      - name: Send deployment to AWS news with AWS Elastic Beanstalk to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"le deploiement sur AWS :aws: est termine "}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json to our github repo
        run: |
          git config user.name github actions
          git config user.email github actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json specifically our docker app image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: Send commit and push news to slack
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"le code avec la modif sur le fichier Dockerrun.aws.json a ete bien commit et push :git-push: sur main par le user github actions"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send last message to slack
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{ job.status }} :end:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
          
